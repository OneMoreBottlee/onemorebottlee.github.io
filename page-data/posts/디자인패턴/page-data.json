{"componentChunkName":"component---src-templates-category-template-js","path":"/posts/디자인패턴","result":{"pageContext":{"currentCategory":"디자인패턴","categories":["All","CS지식발표","디자인패턴","알고리즘","JS","자료구조"],"edges":[{"node":{"id":"8bc3769c-e2e9-5ce4-ae7c-6546b99adf19","excerpt":"서론 Redux 작동 원리를 확인하면서 알게된 Flux 패턴. React와 다른 라이브러리 등에도 쓰이면서 반드시 알아야하는 개념이다는 생각이 들었다. 그런데 Flux 패턴의 시발점이 된 녀석이 있었다?! 반드시 알아야 해! 그래서 Flux 패턴을 정리하기 전 MVC 와 친구들을 정리한다. MVC, MVP, MVVM…? 그게 뭔디?  소프트웨어 디자인 패턴이다. UI와 비즈니스 로직를 분리해 코드를 관리하여, 상호 영향 없이 유지보수와 개발의 효율성을 높일 수 있는 설계 패턴이다. MVC  Model-View-Controller 사용자 인터페이스, 데이터 및 논리 제어를 구현하는데 널리 사용되는 소프트웨어 디자인 패턴이다. 1979년 최초로 소개되어, 지금까지도 널리 사용되고 있다. 후술할 MVP, MVVM 패턴의 기반이 되는 개념이다. Controller Input을 받아 모델에 Action을 전달해 상태를 변경한다. 데이터와 비즈니스 로직 사이의 상호동작을 관리한다. Model…","fields":{"slug":"/cs-MVC&MVP&MVVM/"},"frontmatter":{"categories":"디자인패턴","title":"MVC MVP MVVM","date":"February 07, 2023"}},"next":{"fields":{"slug":"/al-달팽이 배열/"}},"previous":{"fields":{"slug":"/cs-Flux/"}}}]}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}