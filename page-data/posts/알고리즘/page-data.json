{"componentChunkName":"component---src-templates-category-template-js","path":"/posts/알고리즘","result":{"pageContext":{"currentCategory":"알고리즘","categories":["All","자료구조","알고리즘","프로그래머스"],"edges":[{"node":{"id":"78644ba0-c606-53e7-89dd-e3fd89195fca","excerpt":"연결 리스트 Linked List  배열 연결 리스트 장점 인덱스를 통한 빠른 접근 삽입과 삭제가 용이 단점 삽입과 삭제  중간 데이터 삭제시 공간 낭비 발생 임의 접근이 불가능해 느린 탐색 용도 빠른 접근이 요구되고, 데이터의 삽입과 삭제가 적을 때 삽입과 삭제 연산이 요구되고, 검색이 적을 때   단일 연결 리스트  단일 연결 리스트는 위의 그림처럼 한 방향으로 연결되어 있는 자료 구조이다.  연결 관계가 지속되는 것에 주의하면 데이터 추가와 삭제의 개념이 어렵지 않다. 추가 로직 \n 새로운 노드를 생성하고, 새 노드가 그 다음 노드를 가리키게 한다. 새 노드의 이전 노드가 새 노드를 가리키게 한다. 삭제 로직 \n\n 삭제할 타겟 노드를 찾는다. 타겟 노드의 이전 노드가 타겟 노드가 가리키던 노드를 가리키게 한다. 타겟 노드의 포인터가 아무것도 가리키지 않게 한다. 구현 구현한 단일 연결 리스트의 BigO는 다음과 같다. insertion - O(1) Removal - O(1) …","fields":{"slug":"/자료구조-단일연결리스트/"},"frontmatter":{"categories":"자료구조 알고리즘","title":"단일 연결 리스트","date":"January 13, 2023"}},"next":{"fields":{"slug":"/al-p-lv1햄버거만들기/"}},"previous":null},{"node":{"id":"178130d7-bc2f-5419-91df-b80a30017c67","excerpt":"프로그래머스 LV1 햄버거 만들기 문제 설명 햄버거 가게에서 일을 하는 상수는 햄버거를 포장하는 일을 합니다. 함께 일을 하는 다른 직원들이 햄버거에 들어갈 재료를 조리해 주면 조리된 순서대로 상수의 앞에 아래서부터 위로 쌓이게 되고, 상수는 순서에 맞게 쌓여서 완성된 햄버거를 따로 옮겨 포장을 하게 됩니다. 상수가 일하는 가게는 정해진 순서(아래서부터, 빵 – 야채 – 고기 - 빵)로 쌓인 햄버거만 포장을 합니다. 상수는 손이 굉장히 빠르기 때문에 상수가 포장하는 동안 속 재료가 추가적으로 들어오는 일은 없으며, 재료의 높이는 무시하여 재료가 높이 쌓여서 일이 힘들어지는 경우는 없습니다. 예를 들어, 상수의 앞에 쌓이는 재료의 순서가 [야채, 빵, 빵, 야채, 고기, 빵, 야채, 고기, 빵]일 때, 상수는 여섯 번째 재료가 쌓였을 때, 세 번째 재료부터 여섯 번째 재료를 이용하여 햄버거를 포장하고, 아홉 번째 재료가 쌓였을 때, 두 번째 재료와 일곱 번째 재료부터 아홉 번째 재료…","fields":{"slug":"/al-p-lv1햄버거만들기/"},"frontmatter":{"categories":"알고리즘 프로그래머스","title":"프로그래머스 LV1 햄버거 만들기","date":"January 11, 2023"}},"next":null,"previous":{"fields":{"slug":"/자료구조-단일연결리스트/"}}}]}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}