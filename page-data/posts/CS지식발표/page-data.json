{"componentChunkName":"component---src-templates-category-template-js","path":"/posts/CS지식발표","result":{"pageContext":{"currentCategory":"CS지식발표","categories":["All","CS지식발표","디자인패턴","알고리즘","JS","자료구조"],"edges":[{"node":{"id":"f69cb1a3-39fc-575c-8a7c-ff1337bb9460","excerpt":"서론 원티드 프론트엔드 세션에서 Redux 라이브러리를 파헤쳐보라는 조언에 하나씩 살펴보고 검색하면서 Flux 패턴에 대해 알게 되었다. Redux 뿐 아니라 사용해봤거나 알고 있는 라이브러리에서도 쓰이고 있음을 확인하고 “이건 꼭 알아야해 !” 라는 생각으로 정리를 시작하게 되었다. FLUX 패턴 2014 FaceBook F8 에서 발표된, Facebook의 클라이언트-사이드 웹 어플리케이션을 만들기 위해 사용되는 어플리케이션 아키텍쳐이다. React, Redux 등 관련 라이브러리에서 사용중인 일종의 디자인 패턴이다. 단방향 데이터 흐름을 활용해 뷰 컴포넌트를 구성하는 패턴과 같은 모습으로 새로운 코드 작성 없이 바로 사용할 수 있다. 탄생 배경  F8에서 밝힌 바에 따르면 Flux 패턴은 MVC 패턴의 예기치 못한 에러를 핸들링하기 위해 탄생했다고 한다. 위 그림에서 보듯 어플리케이션의 규모가 커지면 필연적으로 Model 과 View 의 종속관계가 증가되고, 의존성 또한 증가…","fields":{"slug":"/cs-Flux/"},"frontmatter":{"categories":"CS지식발표","title":"FLUX","date":"February 14, 2023"}},"next":{"fields":{"slug":"/cs-MVC&MVP&MVVM/"}},"previous":null}]}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}